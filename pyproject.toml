[tool.poetry]
name = "billing"
version = "0.1.0"
description = "Billing service for Vidim project"
authors = ["Vadim Barsukov <v.bars@icloud.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.6"
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
sqlmodel = "^0.0.14"
aiohttp = "^3.9.1"
sqladmin = {extras = ["full"], version = "^0.16.0"}
fastapi = "^0.105.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.29.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
datamodel-code-generator = "^0.25.1"
ruff = "^0.1.7"
pylint = "^3.0.3"
pytest = "^7.4.3"
mypy = "^1.7.1"
httpx = "^0.25.2"


[tool.poetry.group.deploy.dependencies]
uvicorn = "^0.24.0.post1"

[tool.pytest]
addopts = "--cov=shortener --cov-report html:coverage-report-html --cov-fail-under=60"
python_files = "test_*.py"
python_classes = ["*Test", "Test*"]
python_functions = "test_*"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "def __repr__",
    "def __str__",
    "def __unicode__",
]
show_missing = true
skip_empty = true
omit = [
  "*/__init__.py",
  "shortener/db/migrator/env.py",
]

[tool.coverage.html]
directory = "pytest-cov-report"

[tool.coverage.run]
branch = true
concurrency = ['thread', 'greenlet']

[tool.pytest.ini_options]
asyncio_mode = "auto"


# LINTERS
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pylint.master]
extension-pkg-allow-list = ["pydantic"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.basic]
good-names = ["db"]

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "C0114",  # missing-module-docstring
  "C0116",  # missing-function-docstring
  "R0903",  # too-few-public-methods (for sqlalchemy tables and pydantic classes)
  "C0115",  # missing-class-docstring (for api routes)
  "C0103",  # invalid-name (for pydatic settings)
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true
